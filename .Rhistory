test$y
test = data.table(x=c(1,2,3,4), y=as.factor(c('a','a','b','b')))
test
test$y
test = test[1:2,]
test$y
test = droplevels(test)
test
test$y
source('~/Dropbox/tcorpus/R/tcorpus.r')
source('~/Dropbox/tcorpus/R/tcorpus.r')
source('~/Dropbox/tcorpus/R/tcorpus.r')
x = c('a','b','c','cc')
x = as.factor(c('a','b','c','cc'))
x = as.factor(c('a','b','c','c1'))
levels(x) = gsub('1', levels(x))
x = as.factor(c('a','b','c','c1'))
levels(x) = gsub('1', levels(x))
x = as.factor(c('a','b','c','c1'))
levels(x)
levels(x) = gsub('1', '',levels(x))
levels(x)
x = as.factor(c('a','b','c','c1'))
levels(x)
levels(x) = gsub('1', '',levels(x))
levels
x
group_col = c('doc_i','sent_i')[grep(ngram_context, c('document','sentence'))]
ngram_context='document'
ngram_context == c('document','sentence')
group_col = c('doc_i','sent_i')[ngram_context == c('document','sentence')]
group_col
x = data.table(x=c(1,2,3), y =c('a','b','c'))
x
x[[x]]
x[['x']]
source('~/Dropbox/tcorpus/R/tcorpus.r')
x
test = 'banaan''
x[[test]] = 8
test = 'banaan'
test = 'banaan'
x[[test]] = 8
x
source('~/Dropbox/tcorpus/R/tcorpus.r')
source('~/Dropbox/tcorpus/R/tcorpus.r')
source('~/Dropbox/tcorpus/R/tcorpus.r')
source('~/Dropbox/tcorpus/R/tcorpus.r')
source('~/Dropbox/tcorpus/R/tcorpus.r')
source('~/Dropbox/tcorpus/R/tcorpus.r')
source('~/Dropbox/tcorpus/R/tcorpus.r')
source('~/Dropbox/tcorpus/R/tcorpus.r')
source('~/Dropbox/tcorpus/R/tcorpus.r')
source('~/Dropbox/tcorpus/R/tcorpus.r')
source('~/Dropbox/tcorpus/R/tcorpus.r')
which(c(T,T,T))
which(c(T,T,F))
which(which(c(T,T,F)))
doc_i = T
is(doc_i, 'logical')
source('~/Dropbox/tcorpus/R/tcorpus.r')
source('~/Dropbox/tcorpus/R/tcorpus.r')
source('~/Dropbox/tcorpus/R/tcorpus.r')
test = filter_features(tc, 'word')
source('~/Dropbox/tcorpus/R/tcorpus.r')
source('~/Dropbox/tcorpus/R/tcorpus.r')
test = filter_features(tc, 'word')
source('~/Dropbox/tcorpus/R/tcorpus.r')
sum(test)
mean(test)
source('~/Dropbox/tcorpus/R/tcorpus.r')
test = filter_features(tc, 'word')
source('~/Dropbox/tcorpus/R/tcorpus.r')
source('~/Dropbox/tcorpus/R/tcorpus.r')
test = filter_features(tc, 'word')
source('~/Dropbox/tcorpus/R/tcorpus.r')
test = filter_features(tc, 'word')
source('~/Dropbox/tcorpus/R/tcorpus.r')
test = filter_features(tc, 'word')
source('~/Dropbox/tcorpus/R/tcorpus.r')
source('~/Dropbox/tcorpus/R/tcorpus.r')
source('~/Dropbox/tcorpus/R/tcorpus.r')
source('~/Dropbox/tcorpus/R/tcorpus.r')
get_provenance(tc, 'feature_index')
get_provenance(tc, 'feature_index')
get_provenance(tc)$feature_index
source('~/Dropbox/tcorpus/R/tcorpus.r')
p = get_provenance(tc)
p
source('~/Dropbox/tcorpus/R/tcorpus.r')
source('~/Dropbox/tcorpus/R/tcorpus.r')
test = filter_tcorpus(tc, feature='word', max_word_i = 100)
tc = filter_tcorpus(tc, feature='word', max_word_i = 100)
tc@data
tc = set_feature_index(tc, 'word')
source('~/Dropbox/tcorpus/R/tcorpus.r')
source('~/Dropbox/tcorpus/R/tcorpus.r')
tc = filter_tcorpus(tc, feature='word', max_word_i = 100, keep_filtered_data = F)
source('~/Dropbox/tcorpus/R/tcorpus.r')
source('~/Dropbox/tcorpus/R/tcorpus.r')
source('~/Dropbox/tcorpus/R/search_features.r')
source('~/Dropbox/tcorpus/R/search_features.r')
source('~/Dropbox/tcorpus/R/search_features.r')
search_features <- function(tc, keyword=NULL, condition=NULL, code=NULL, queries=data.frame(code,keyword,condition), feature='word', context_level='document', keep_false_condition=F, verbose=F){
windows = na.omit(get_feature_regex(queries$condition)$window)
max_window_size = if(length(windows) > 0) max(windows) else 0
fi = get_feature_index(tc, feature=feature, context_level=context_level, max_window_size = max_window_size)
res = list()
for(i in 1:nrow(queries)){
code = queries$code[i]
if(verbose) print(sprintf('%s:\t%s', i, code))
kw = queries$keyword[i]
hit = search_keyword(tc, fi, queries$keyword[i])
hit$condition = search_condition(tc, fi, hit, queries$condition[i])
if(!keep_false_condition) {
res[[code]] = hit[hit$condition, c('feature','i','doc_i'), with=F]
} else {
res[[code]] = hit[,c('feature','i','doc_i','condition'), with=F]
}
}
# make proper ldply wrapper to enable verbose
plyr::ldply(res, function(x) x, .id='code')
}
test = get_hits(tc, queries)
source('~/Dropbox/tcorpus/R/search_features.r')
test = search_features(tc, queries)
test = search_features(tc, queries=queries)
source('~/Dropbox/tcorpus/R/search_features.r')
test = search_features(tc, queries=queries)
test
test = search_features(tc, keyword='test')
source('~/Dropbox/tcorpus/R/search_features.r')
test = search_features(tc, keyword='test')
test = search_features(tc, keyword='test', condition='test')
test
source('~/Dropbox/tcorpus/R/search_features.r')
test = search_features(tc, keyword='test', condition='test')
test = search_features(tc, keyword='test')
source('~/Dropbox/tcorpus/R/search_features.r')
test = search_features(tc, keyword='test')
source('~/Dropbox/tcorpus/R/search_features.r')
test = search_features(tc, keyword='test')
source('~/Dropbox/tcorpus/R/search_features.r')
test = search_features(tc, keyword='test')
test
source('~/Dropbox/tcorpus/R/search_features.r')
source('~/Dropbox/tcorpus/R/search_features.r')
test = search_features(tc, keyword='test')
test = search_features(tc, queries=queries)
test = search_features(tc, keyword='test')
source('~/Dropbox/tcorpus/R/search_features.r')
source('~/Dropbox/tcorpus/R/search_features.r')
test = search_features(tc, keyword='test')
source('~/Dropbox/tcorpus/R/search_features.r')
test = search_features(tc, keyword='test')
test
source('~/Dropbox/tcorpus/R/search_features.r')
source('~/Dropbox/tcorpus/R/search_features.r')
test = search_features(tc, keyword='test')
test
source('~/Dropbox/tcorpus/R/search_features.r')
test = search_features(tc, keyword='test')
test
source('~/Dropbox/tcorpus/R/search_features.r')
test = search_features(tc, keyword='test')
test
source('~/Dropbox/tcorpus/R/search_features.r')
source('~/Dropbox/tcorpus/R/search_features.r')
source('~/Dropbox/tcorpus/R/search_features.r')
library(tcorpus)
text = c('Renewable fuel is better than fossil fuels!',
'A fueled debate about fuel',
'Mark Rutte is simply Rutte')
tc = create_tcorpus(text)
hits = search_feature(tc, keyword = 'fuel')
library(tcorpus)
text = c('Renewable fuel is better than fossil fuels!',
'A fueled debate about fuel',
'Mark Rutte is simply Rutte')
tc = create_tcorpus(text)
hits = search_feature(tc, keyword = 'fuel')
library(tcorpus)
hits = search_features(tc, keyword = 'fuel')
hits = search_features(tc, keyword = 'fuel')
hits
library(tcorpus)
text = c('Renewable fuel is better than fossil fuels!',
'A fueled debate about fuel',
'Mark Rutte is simply Rutte')
tc = create_tcorpus(text)
hits = search_features(tc, keyword = 'fuel')
hits
tc = set_global_i(tc)
tc = set_feature_index(tc)
tc = set_feature_index(tc, feature='word')
tc
hits = feature_query(tc, keyword = 'fuel fuels')
hits = search_features(tc, keyword = 'fuel fuels')
hits = search_features(tc, keyword = 'fuel fuels')
hits
hits = search_features(tc, keyword = 'fuel*')
hits
hits = search_features(tc, keyword = 'fuel*', condition = 'renewable green clean')
hits
hits = search_features(tc, keyword = 'fuel*', condition = 'renewable green clean', default_window = 2)
hits = search_features(tc, keyword = 'fuel*', condition = 'renewable green clean', default_window = 2)
hits = search_features(tc, keyword = 'fuel*', condition = 'renewable green clean', default_window = 2)
library(tcorpus)
library(tcorpus)
hits = search_features(tc, keyword = 'fuel*', condition = 'renewable green clean', default_window = 2)
library(tcorpus)
text = c('Renewable fuel is better than fossil fuels!',
'A fueled debate about fuel',
'Mark Rutte is simply Rutte')
tc = create_tcorpus(text)
hits = search_features(tc, keyword = 'fuel*', condition = 'renewable green clean', default_window = 2)
library(tcorpus)
hits = search_features(tc, keyword = 'fuel')
library(tcorpus)
hits = search_features(tc, keyword = 'fuel*', condition = 'renewable green clean')
hits = search_features(tc, keyword = 'fuel*', condition = 'renewable green clean')
library(tcorpus)
hits = search_features(tc, keyword = 'fuel')
h
hits
search_features
tc = set_feature_index(tc, feature='word')
hits = search_features(tc, keyword = 'fuel fuels')
hits = search_features(tc, keyword = 'fuel*')
hits = search_features(tc, keyword = 'fuel*', condition = 'renewable green clean')
hits = search_features(tc, feature='word', keyword = 'fuel*', condition = 'renewable green clean')
hits = search_features(tc, keyword = 'fuel*', condition = 'renewable green clean')
hits = search_features(tc, keyword = 'fuel*')
hits
hits = search_features(tc, keyword = 'fuel*', condition='test')
test = search_features(tc, keyword='test')
test = search_features(tc, keyword='test', condition='test')
hits = search_features(tc, keyword = 'fuel*', condition = 'renewable green clean')
hits = search_features(tc, keyword = 'fuel*', condition = 'renewable green clean')
library(tcorpus)
hits = search_features(tc, keyword = 'fuel*', condition = 'renewable green clean', default_window = 2)
hits
hit
library(tcorpus)
library(tcorpus)
hits = search_features(tc, keyword = 'fuel*', condition = 'renewable green clean', default_window = 2)
hits_f = search_features(tc, keyword = 'rutte', condition = 'mark~2')
hits_t = search_features(tc, keyword = 'rutte', condition = 'mark~2', condition_once = T)
hits_f
hits_t
source('~/Dropbox/tcorpus/R/search_features.r')
hits_f = search_features(tc, keyword = 'rutte', condition = 'mark~2')
hits_t = search_features(tc, keyword = 'rutte', condition = 'mark~2', condition_once = T)
hits_t
source('~/Dropbox/tcorpus/R/search_features.r')
hits_t = search_features(tc, keyword = 'rutte', condition = 'mark~2', condition_once = T)
source('~/Dropbox/tcorpus/R/search_features.r')
hits_t = search_features(tc, keyword = 'rutte', condition = 'mark~2', condition_once = T)
hits_t
queries = data.frame(code=c('renewable fuel', 'mark rutte', 'debate'),
keyword=c('fuel*', 'rutte', 'debate'),
condition = c('renewable green clean', 'mark~2', ''))
hits = feature_queries(tc, queries, condition_once=c(F,T,F))
queries = data.frame(code=c('renewable fuel', 'mark rutte', 'debate'),
keyword=c('fuel*', 'rutte', 'debate'),
condition = c('renewable green clean', 'mark~2', ''))
hits = search_features(tc, queries, condition_once=c(F,T,F))
hits = search_features(tc, queries=queries, condition_once=c(F,T,F))
queries
hits = search_features(tc, queries=queries, condition_once=c(F,T,F))
source('~/Dropbox/tcorpus/R/search_features.r')
source('~/Dropbox/tcorpus/R/search_features.r')
hits = search_features(tc, queries=queries, condition_once=c(F,T,F))
hits_f = search_features(tc, keyword = 'rutte', condition = 'mark~2')
hits_f = search_features(tc, keyword = 'rutte', condition = 'mark~2', feature='est')
source('~/Dropbox/tcorpus/R/search_features.r')
source('~/Dropbox/tcorpus/R/search_features.r')
source('~/Dropbox/tcorpus/R/search_features.r')
hits_f = search_features(tc, keyword = 'rutte', condition = 'mark~2', feature='est')
source('~/Dropbox/tcorpus/R/search_features.r')
source('~/Dropbox/tcorpus/R/search_features.r')
hits_t = search_features(tc, keyword = 'rutte', condition = 'mark~2', condition_once = T)
hits = search_features(tc, queries=queries, condition_once=c(F,T,F))
source('~/Dropbox/tcorpus/R/search_features.r')
hits = search_features(tc, queries=queries, condition_once=c(F,T,F))
source('~/Dropbox/tcorpus/R/search_features.r')
hits = search_features(tc, queries=queries, condition_once=c(F,T,F))
source('~/Dropbox/tcorpus/R/search_features.r')
hits = search_features(tc, queries=queries, condition_once=c(F,T,F))
hits_t = search_features(tc, keyword = 'rutte', condition = 'mark~2', condition_once = T)
hits_f = search_features(tc, keyword = 'rutte', condition = 'mark~2', feature='est')
source('~/Dropbox/tcorpus/R/search_features.r')
hits_f = search_features(tc, keyword = 'rutte', condition = 'mark~2', feature='est')
hits = search_features(tc, condition_once=c(F,T,F), queries=queries)
source('~/Dropbox/tcorpus/R/search_features.r')
hits = search_features(tc, queries=queries, condition_once=c(F,T,F))
source('~/Dropbox/tcorpus/R/search_features.r')
hits = search_features(tc, queries=queries, condition_once=c(F,T,F))
hits = search_features(tc, queries=queries, condition_once=F)
hits_f = search_features(tc, keyword = 'rutte', condition = 'mark~2', feature='est')
hits_t = search_features(tc, keyword = 'rutte', condition = 'mark~2', condition_once = T)
hits_f = search_features(tc, keyword = 'rutte', condition = 'mark~2')
hits_f
hits = search_features(tc, queries=queries, condition_once=c(F,T,F))
source('~/Dropbox/tcorpus/R/search_features.r')
hits = search_features(tc, queries=queries, condition_once=c(F,T,F))
source('~/Dropbox/tcorpus/R/search_features.r')
hits = search_features(tc, queries=queries, condition_once=c(F,T,F))
source('~/Dropbox/tcorpus/R/search_features.r')
hits = search_features(tc, queries, condition_once=c(F,T,F), batchsize=1)
hits = search_features(tc, queries=queries, condition_once=c(F,T,F))
hits = search_features(tc, queries=queries, condition_once=c(F,T,F))
source('~/Dropbox/tcorpus/R/search_features.r')
source('~/Dropbox/tcorpus/R/search_features.r')
hit
res = []
res = list
res = list()
plyr::ldply(res, function(x) x, .id='code')
source('~/Dropbox/tcorpus/R/search_features.r')
source('~/Dropbox/tcorpus/R/search_features.r')
tc = readRDS('tc_backup.rds')
queries = data.frame(code=c('Jolande Sap', 'Mark Rutte', 'goede nederlander'),
keyword=c('sap', 'rutte', 'goed sterk krachtig slim'),
condition = c('jolande groenlinks~10', 'mark vvd~10 minister~5 president~5', 'nederland* NOT (niet~2 niet~10 allesbehalve~2)'))
feature = 'word'
context_level='document'
test = search_features(tc, queries=queries)
test
test = search_features(tc, queries=queries)
tc = set_feature_index(tc, feature='word')
tc = set_feature_index(tc, feature='word')
tc
library(tcorpus)
text = c('Renewable fuel is better than fossil fuels!',
'A fueled debate about fuel',
'Mark Rutte is simply Rutte')
tc = create_tcorpus(text)
hits = search_features(tc, keyword = 'fuel')
tc = set_feature_index(tc, feature='word')
tc
source('~/Dropbox/tcorpus/R/search_features.r')
library(tCorpus)
library(tcorpus)
library(tCorpus)
library(tcorpus)
tc = readRDS('tc_backup.rds')
queries = data.frame(code=c('Jolande Sap', 'Mark Rutte', 'goede nederlander'),
keyword=c('sap', 'rutte', 'goed sterk krachtig slim'),
condition = c('jolande groenlinks~10', 'mark vvd~10 minister~5 president~5', 'nederland* NOT (niet~2 niet~10 allesbehalve~2)'))
feature = 'word'
context_level='document'
test = search_features(tc, queries=queries)
tc = set_feature_index(tc, feature='word')
test = search_features(tc, keyword='test', condition='test')
tc
d = read.csv('~/Dropbox/facebook_data/newssites/data/volkskrant.csv')
tc = create_tcorpus(d, text_column = 'text')
saveRDS(tc, 'tc_backup.rds')
queries = data.frame(code=c('Jolande Sap', 'Mark Rutte', 'goede nederlander'),
keyword=c('sap', 'rutte', 'goed sterk krachtig slim'),
condition = c('jolande groenlinks~10', 'mark vvd~10 minister~5 president~5', 'nederland* NOT (niet~2 niet~10 allesbehalve~2)'))
test = search_features(tc, queries=queries)
tc = set_feature_index(tc, feature='word')
test = search_features(tc, keyword='test', condition='test')
test
test = search_features(tc, queries=queries)
source('~/Dropbox/tcorpus/R/search_features.r')
library(tcorpus)
tc = readRDS('tc_backup.rds')
queries = data.frame(code=c('Jolande Sap', 'Mark Rutte', 'goede nederlander'),
keyword=c('sap', 'rutte', 'goed sterk krachtig slim'),
condition = c('jolande groenlinks~10', 'mark vvd~10 minister~5 president~5', 'nederland* NOT (niet~2 niet~10 allesbehalve~2)'))
feature = 'word'
context_level='document'
test = search_features(tc, queries=queries)
test
tc = set_feature_index(tc, feature='word')
test = search_features(tc, queries=queries)
test
library(tcorpus)
library(corpustools)
data(sotu)
head(sotu.tokens)
head(sotu.tokens, 100)
source('~/Dropbox/tcorpus/R/search_features.r')
source('~/Dropbox/tcorpus/R/search_features.r')
library(tcorpus)
library(tcorpus)
text = c('Renewable fuel is better than fossil fuels!',
'A fueled debate about fuel',
'Mark Rutte is simply Rutte')
tc = create_tcorpus(text)
tc
hits = search_features(tc, keyword = 'fuel')
hits
tc = set_feature_index(tc, feature='word')
tc
hits = search_features(tc, keyword = 'fuel fuels')
hits
hits = search_features(tc, keyword = 'fuel*')
hits
source('~/Dropbox/tcorpus/R/search_features.r')
library(tcorpus)
library(tcorpus)
text = c('Renewable fuel is better than fossil fuels!',
'A fueled debate about fuel',
'Mark Rutte is simply Rutte')
tc = create_tcorpus(text)
hits = search_features(tc, keyword = 'fuel')
tc = set_feature_index(tc, feature='word')
hits = search_features(tc, keyword = 'fuel fuels')
hits
hits = search_features(tc, keyword = 'fuel*')
hits
hits = search_features(tc, keyword = 'fuel*', condition = 'renewable green clean')
hits
hits_f = search_features(tc, keyword = 'rutte', condition = 'mark~2')
hits_t = search_features(tc, keyword = 'rutte', condition = 'mark~2', condition_once = T)
hits_f
hits_t
queries = data.frame(code=c('renewable fuel', 'mark rutte', 'debate'),
keyword=c('fuel*', 'rutte', 'debate'),
condition = c('renewable green clean', 'mark~2', ''))
hits = search_features(tc, queries=queries, condition_once=c(F,T,F))
hits
freq
docfreq
docfreq.numeric <- function(x){
x * 10
}
docfreq('test')
docfreq(10)
docfreq.numeric <- function(x){
x * 10
}
docfreq(10)
docfreq.numeric <- function(x){
x * 10
}
docfreq.numeric(10)
docfreq(10)
doc_freq
sapply(1:4, sum)
sapply(c('a','a','b','b','c'), sum)
sapply(c('a','a','b','b','c'), length)
tapply(rep(1, 5), c('a','a','b','b','c'), sum)
?tapply
source('~/Dropbox/tcorpus/R/tcorpus.r')
source('~/Dropbox/tcorpus/R/tcorpus.r')
source('~/Dropbox/tcorpus/R/tcorpus.r')
source('~/Dropbox/tcorpus/R/tcorpus.r')
source('~/Dropbox/tcorpus/R/tcorpus.r')
source('~/Dropbox/tcorpus/R/tcorpus.r')
source('~/Dropbox/tcorpus/R/tcorpus.r')
source('~/Dropbox/tcorpus/R/tcorpus.r')
source('~/Dropbox/tcorpus/R/tcorpus.r')
source('~/Dropbox/tcorpus/R/tcorpus.r')
source('~/Dropbox/tcorpus/R/tcorpus.r')
source('~/Dropbox/tcorpus/R/tcorpus.r')
tc = tCorpus()
tc
source('~/Dropbox/tcorpus/R/tcorpus.r')
library(tcorpus)
text = c('Renewable fuel is better than fossil fuels!',
'A fueled debate about fuel',
'Mark Rutte is simply Rutte')
tc = create_tcorpus(text)
tc
key(tc)
?setkey
key(tc@data)
!key(tc@data) == 'doc_id'
source('~/Dropbox/tcorpus/R/tcorpus.r')
source('~/Dropbox/tcorpus/R/tcorpus.r')
source('~/Dropbox/tcorpus/R/tcorpus.r')
source('~/Dropbox/tcorpus/R/tcorpus.r')
source('~/Dropbox/tcorpus/R/tcorpus.r')
library(tcorpus)
source('~/Dropbox/tcorpus/R/tcorpus.r')
source('~/Dropbox/tcorpus/R/tcorpus.r')
library(tcorpus)
library(stargazer)
install.packages('stargazer')
testfun <- function(..., names){
varl = list(...)
for i in 1:length(varl):
print(varl[[i]]), names[[i]])
}
testfun <- function(..., names){
varl = list(...)
for i in 1:length(varl){
print(varl[[i]]), names[[i]])
}
}
install.packages('stargazer')
library(stargazer)
?lm
ctl <- c(4.17,5.58,5.18,6.11,4.50,4.61,5.17,4.53,5.33,5.14)
trt <- c(4.81,4.17,4.41,3.59,5.87,3.83,6.03,4.89,4.32,4.69)
group <- gl(2, 10, 20, labels = c("Ctl","Trt"))
weight <- c(ctl, trt)
lm.D9 <- lm(weight ~ group)
m1 <- lm(weight ~ group)
m2 <- lm(weight ~ group*2)
m2 <- lm(weight ~ group)
stargazer(m1, m2)
do.call(stargazer, args=list(m1=m1, m2=m2))
mapply(stargazer, MoreArgs = list(m1=m1, m2=m2))
list(m1=m1, m2=m2)
mapply(stargazer, MoreArgs = list(m1=m1, m2=m2))
mapply(stargazer, list(m1=m1, m2=m2))
