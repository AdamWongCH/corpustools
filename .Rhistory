f$id == c('', f$id[-nrow(f)])
sum(f$id == c('', f$id[-nrow(f)]))
f$id == ''
!f$id == '' & c('', f$id[-nrow(f)]) == ''
f$id[-nrow(f)]) == ''
c('', f$id[-nrow(f)]) == ''
c('', f$id[-nrow(f)])
c(NA, f$id[-nrow(f)])
f$id
f$id[1:10]
c(f$id[1:10])
f$id[1:10]
lag(f$id[1:10]) == ''
(f$id[1:10]) == ''
is_empty = f$id = ''
!is_empty & c(T, is_empty[-length(empty)])
is_empty = f$id = ''
!is_empty & c(T, is_empty[-length(empty)])
is_empty = f$id == ''
!is_empty & c(T, is_empty[-length(empty)])
is_empty = f$id == ''
!is_empty & c(T, is_empty[-length(is_empty)])
!is_empty
is_empty = f$id == ''
sum(is_empty)
sum(!is_empty)
f = get_data(tc, columns = c(feature, mword_id))
colnames(f) = c('feature','id')
is_empty = f$id == ''
sum(!is_empty)
!is_empty & c(T, is_empty[-length(is_empty)])
new_id = !is_empty & c(T, is_empty[-length(is_empty)])
nf$ew_id = !is_empty & c(T, is_empty[-length(is_empty)])
f$new_id = !is_empty & c(T, is_empty[-length(is_empty)])
f = f[!f$id == '',]
f
f$new_id = cumsum(f$new_id)
head(f)
split(f, f$new_id)
f = split(f, f$new_id)
f = get_data(tc, columns = c(feature, mword_id))
colnames(f) = c('feature','id')
is_empty = f$id == ''
f$new_id = !is_empty & c(T, is_empty[-length(is_empty)])
f$new_id = cumsum(f$new_id)
head(f)
f = get_data(tc, columns = c(feature, mword_id))
colnames(f) = c('feature','id')
is_empty = f$id == ''
f$new_id = !is_empty & c(T, is_empty[-length(is_empty)])
f = f[!f$id == '',]
f$new_id = cumsum(f$new_id)
head(f)
ddply(f, 'new_id', function(x) paste(x$feature, collapse=' '))
plyr::ddply(f, 'new_id', function(x) paste(x$feature, collapse=' '))
plyr::ddply(f, 'new_id', function(x) data.frame(id=x$id, label=paste(x$feature, collapse=' ')))
labeld = plyr::ddply(f, 'new_id', function(x) data.frame(id=x$id, label=paste(x$feature, collapse=' ')))
labeld = split(f, f$new_id)
labeld = plyr::ddply(f, 'new_id', function(x) data.frame(id=x$id, label=paste(x$feature, collapse=' ')))
labeld = split(f, f$new_id)
labeld = split(f, f$new_id)
labeld = sapply(labeld, function(x) data.frame(id=x$id, label=paste(x$feature, collapse=' ')))
head(labeld)
labeld = split(f, f$new_id)
labeld = sapply(labeld, function(x) id=x$id, label=paste(x$feature, collapse=' '))
labeld = split(f, f$new_id)
label
label = split(f$feature, f$new_id)
label = sapply(label, paste, collapse=' ')
head(label)
label = split(f$new_id, f$new_id)
head(label)
key(f)
head(f)
setkey(f, 'new_id')
test = f[, list(label=paste(get('feature'), collapse=' '),
id = unique(get'id')),
by= get('new_id')]
test = f[, list(label=paste(get('feature'), collapse=' '),
id = unique(get'id')),
by= 'new_id']
test = f[, list(label=paste(get('feature'), collapse=' '),
id = unique(get'id')),
by= 'new_id']
f
test = f[, list(label=paste(get('feature'), collapse=' '),
id = unique(get'id')),
by= 'new_id']
test = f[, list(label=paste(get('feature'), collapse=' '),
id = unique(get'id')),
test = f[, list(label=paste(get('feature'), collapse=' '),
id = unique(get('id'))),
by= 'new_id']
head(test)
f = get_data(tc, columns = c(feature, mword_id))
colnames(f) = c('feature','id')
is_empty = f$id == ''
f$new_id = !is_empty & c(T, is_empty[-length(is_empty)])
f = f[!f$id == '',]
f$new_id = cumsum(f$new_id)
setkey(f, 'new_id')
test = f[, list(label=paste(get('feature'), collapse=' '),
id = unique(get('id'))),
by= 'new_id']
label = f[, list(label=paste(get('feature'), collapse=' '),
id = unique(get('id'))),
by= 'new_id']
head(label)
key(label)
setkey(label, 'id')
label = label[, list(N = .N), by= 'label,id']
label
label = label[order(-label$N),]
head(label)
label$N
order(-label$N)
label = label[order(-label$N),]
label
label[order(-label$N),]
label$N
order(-label$N)
label = label[order(-label$N)]
ord = order(-label$N)
label = label[ord,]
label
label = label[!duplicated(label$id),]
duplicated(label$id)
!duplicated(label$id)
label = label[!duplicated(label$id),]
f = get_data(tc, columns = c(feature, mword_id))
colnames(f) = c('feature','id')
is_empty = f$id == ''
f$new_id = !is_empty & c(T, is_empty[-length(is_empty)])
f = f[!f$id == '',]
f$new_id = cumsum(f$new_id)
setkey(f, 'new_id')
label = f[, list(label=paste(get('feature'), collapse=' '),
id = unique(get('id'))),
by= 'new_id']
setkey(label, 'id')
label = label[, list(N = .N), by= 'label,id']
ord = order(-label$N)
label = label[ord,]
label = label[!duplicated(label$id),]
nondub = !duplicated(label$id)
label = label[nondub,]
label = label[order(-label$N),,with=F]
label = label[order(-label$N),]
label$N
order(-label$N)
ord = order(-label$N)
label = label[ord,]
nondub = !duplicated(label$id)
label = label[nondub,]
ord = order(-label$N)
label = label[ord,] ## for some reason I cannot directly use the order function between the brackets...
nondup = !duplicated(label$id)
label = label[nondup,] ## and also not the non duplicate selector
label
label = f[, list(label=paste(get('feature'), collapse=' '),
id = unique(get('id'))), by= 'new_id']
setkey(label, 'id')
label = label[, N = .N, by= 'label,id']
label = f[, list(label=paste(get('feature'), collapse=' '),
id = unique(get('id'))), by= 'new_id']
label = label[, list(N = .N), by= 'label,id']
f = get_data(tc, columns = c(feature, mword_id))
colnames(f) = c('feature','id')
is_empty = f$id == ''
f$new_id = !is_empty & c(T, is_empty[-length(is_empty)])
f = f[!f$id == '',]
f$new_id = cumsum(f$new_id)
label = f[, list(label=paste(get('feature'), collapse=' '),
id = unique(get('id'))), by= 'new_id']
label = label[, list(N = .N), by= 'label,id']
label
f = get_data(tc, columns = c(feature, mword_id))
colnames(f) = c('feature','id')
lag(c(1,2,3,4))
?lag
shift(f$id)
test = f[1:10,]
test
shift(test$id)
newid = !f$id == shift(f$id)
newid
f$newid = !f$id == shift(f$id)
head(f)
head(f,10)
head(f,100)
f = f[10:20]
f
f$newid = !f$id == shift(f$id)
f
shift(f$id, fill='')
f = get_data(tc, columns = c(feature, mword_id))
colnames(f) = c('feature','id')
levels(f) = c(levels(f), '')
levels(f)
f = get_data(tc, columns = c(feature, mword_id))
colnames(f) = c('feature','id')
levels(f$id)
shift(f$id)
head(shift(f$id, fill='test'))
head(shift(f$id, fill=''))
head(shift(f$id, fill='Green Party (65602)'))
head(shift(f$id, fill='Abdelhamid Abaaoud (1913787)'))
head(shift(f$id, fill=as.factor('')))
f$newid = !f$id == shift(f$id, fill=as.factor(''))
f$newid
head(f,100)
f = get_data(tc, columns = c(feature, mword_id))
colnames(f) = c('feature','id')
f = f[10:20]
f$newid = !f$id == shift(f$id, fill=as.factor(''))
head(f,100)
f = get_data(tc, columns = c(feature, mword_id))
colnames(f) = c('feature','id')
f$newid = !f$id == shift(f$id, fill=as.factor(''))
head(f,100)
f = f[!f$id == '',]
head(f)
f = get_data(tc, columns = c(feature, mword_id))
colnames(f) = c('feature','id')
f$new_id = !f$id == shift(f$id, fill=as.factor(''))
f = f[!f$id == '',]
f$new_id = cumsum(f$new_id)
label = f[, list(label=paste(get('feature'), collapse=' '),
id = unique(get('id'))), by= 'new_id']
label = label[, list(N = .N), by= 'label,id']
label
label = label[order(label),]
label = label[order(label$N),]
label$N
class(label$N)
label = label[order(label),]
label
label = label[order(-label),]
label
label = f[, list(label=paste(get('feature'), collapse=' '),
id = unique(get('id'))), by= 'new_id']
label = label[, list(N = .N), by= 'label,id']
label
label = label[order(-label[['N']]),]
label[['N']]
label = label[order(-(label[['N']])),]
label = label[{order(-label$N)},]
ord = order(-label$N)
multiword_labels <- function(tc, mword_id, feature='word'){
f = get_data(tc, columns = c(feature, mword_id))
colnames(f) = c('feature','id')
f$new_id = !f$id == shift(f$id, fill=as.factor(''))
f = f[!f$id == '',]
f$new_id = cumsum(f$new_id)
label = f[, list(label=paste(get('feature'), collapse=' '),
id = unique(get('id'))), by= 'new_id']
label = label[, list(N = .N), by= 'label,id']
ord = order(-label$N)
label[ord,]
}
multiword_labels <- function(tc, mword_id, feature='word'){
f = get_data(tc, columns = c(feature, mword_id))
colnames(f) = c('feature','id')
f$new_id = !f$id == shift(f$id, fill=as.factor(''))
f = f[!f$id == '',]
f$new_id = cumsum(f$new_id)
label = f[, list(label=paste(get('feature'), collapse=' '),
id = unique(get('id'))), by= 'new_id']
as.data.frame(label[, list(N = .N), by= 'label,id'])
}
multiword_labels(tc, 'jrc_names')
multiword_labels(tc, 'jrc_names')
source('~/Dropbox/tcorpus/R/resources.r')
label
label_table
label = multiword_labels(tc, mword_id, feature=feature) ## for shattered_tCorpus, this has to be done for the entire corpus first, or labels will not match across shards
label = label[order(-label$N),]
label = label[!duplicated(label$id),]
head(labels)
head(label)
f = rep(NA, 10)
f
f = as.factor(rep(NA, 10))
f
f = factor(rep(NA, 10))
f
f = factor(rep(NA, 10), 1:3, c('a','b','c'))
f
f
f[2:5] = c('b','b','a')
f[2:5] = c('b','b','a','a')
f
source('~/Dropbox/tcorpus/R/resources.r')
source('~/Dropbox/tcorpus/R/resources.r')
multiword_labels <- function(tc, mword_id, feature='word'){
f = get_data(tc, columns = c(feature, mword_id))
colnames(f) = c('feature','id')
f$new_id = !f$id == shift(f$id, fill=as.factor(''))
f = f[!f$id == '',]
f$new_id = cumsum(f$new_id)
label = f[, list(label=paste(get('feature'), collapse=' '),
id = unique(get('id'))), by= 'new_id']
as.data.frame(label[, list(N = .N), by= 'label,id'])
}
add_multiword_label(tc, mword_id, feature='word'){
source('~/Dropbox/tcorpus/R/resources.r')
source('~/Dropbox/tcorpus/R/resources.r')
mtc = feature_from_resource(mtc, 'jrc_names', save_path = '~/Downloads')
source('~/Dropbox/tcorpus/R/resources.r')
mtc = feature_from_resource(mtc, 'jrc_names', save_path = '~/Downloads')
source('~/Dropbox/tcorpus/R/resources.r')
mtc = feature_from_resource(mtc, 'jrc_names', save_path = '~/Downloads')
mtc = feature_from_resource(subset(mtc, 1:10), 'jrc_names', save_path = '~/Downloads')
source('~/Dropbox/tcorpus/R/resources.r')
mtc = feature_from_resource(subset(mtc, 1:10), 'jrc_names', save_path = '~/Downloads')
source('~/Dropbox/tcorpus/R/resources.r')
mtc = feature_from_resource(subset(mtc, 1:10), 'jrc_names', save_path = '~/Downloads')
source('~/Dropbox/tcorpus/R/resources.r')
mtc = feature_from_resource(subset(mtc, 1:10), 'jrc_names', save_path = '~/Downloads')
source('~/Dropbox/tcorpus/R/resources.r')
get_data(mtc)
tc = mtc
f = get_data(tc, columns = c(feature, mword_id))
f
colnames(f) = c('feature','id')
f$new_id = !f$id == shift(f$id, fill=as.factor(NA))
f$new_id
f$new_id = !f$id == shift(f$id, fill=as.factor(''))
f$new_id
f
source('~/Dropbox/tcorpus/R/resources.r')
mtc = feature_from_resource(mtc, 'jrc_names', save_path = '~/Downloads')
f = get_data(tc, columns = c(feature, mword_id))
colnames(f) = c('feature','id')
lag_id = shift(f$id, fill=as.factor(NA))
lag_id
tc = mtc
f = get_data(tc, columns = c(feature, mword_id))
colnames(f) = c('feature','id')
lag_id = shift(f$id, fill=as.factor(NA))
lag_id
mtc
mtc = merge_tcorpora(en=en, nl=nl)
mtc = feature_from_resource(mtc, 'jrc_names', save_path = '~/Downloads')
f = get_data(tc, columns = c(feature, mword_id))
colnames(f) = c('feature','id')
lag_id = shift(f$id, fill=as.factor(NA))
lag_id
tc  = mtc
f = get_data(tc, columns = c(feature, mword_id))
colnames(f) = c('feature','id')
lag_id = shift(f$id, fill=as.factor(NA))
lag_id
mtc
tc
f = get_data(tc, columns = c(feature, mword_id))
get_data(tc)
mtc = feature_from_resource(mtc, 'jrc_names', save_path = '~/Downloads')
get_data(mtc)
source('~/Dropbox/tcorpus/R/resources.r')
source('~/Dropbox/tcorpus/R/resources.r')
mtc = feature_from_resource(mtc, 'jrc_names', save_path = '~/Downloads')
source('~/Dropbox/tcorpus/R/resources.r')
mtc = feature_from_resource(mtc, 'jrc_names', save_path = '~/Downloads')
source('~/Dropbox/tcorpus/R/resources.r')
mtc = feature_from_resource(mtc, 'jrc_names', save_path = '~/Downloads')
get_data(mtc)
get_data(mtc)$jrc_names
source('~/Dropbox/tcorpus/R/resources.r')
tc = mtc
f = get_data(tc, columns = c(feature, mword_id))
colnames(f) = c('feature','id')
lag_id = shift(f$id, fill=as.factor(NA))
lag_id
f$new_id = !f$id == shift(f$id, fill=as.factor(''))
f
f[1:100,]
lag_id = shift(f$id, fill=as.factor(NA))
f$new_id = !f$id == lag_id | (!is.na(f$id) & is.na(lag_id))
f[1:100,]
f$new_id = is.na(lag_id) & !f$id == lag_id
f[1:100,]
f$lag_id = shift(f$id, fill=as.factor(NA))
f[1:100,]
lag_id = shift(f$id, fill=as.factor(NA))
f$new_id = !f$id == lag_id | (!is.na(f$id) & is.na(lag_id))
f[1:100,]
f = f[!f$id == '',]
f = f[!is.na(f$id),]
f[1:100,]
source('~/Dropbox/tcorpus/R/resources.r')
multiword_labels(mtc, 'jrc_names')
label = multiword_labels(tc, mword_id, feature=feature) ## for shattered_tCorpus, this has to be done for the entire corpus first, or labels will not match across shards
label = label[order(-label$N),]
label = label[!duplicated(label$id),]
label
label$label = as.factor(label$label)
label$label
f = factor(rep(NA, n_data(tc)), 1:length(levels(labels$label)), levels(labels_label))
rep(NA, n_data(tc))
1:length(levels(labels$label))
labels$label
f = factor(rep(NA, n_data(tc)), 1:length(levels(label$label)), levels(label$label))
f
get_column(tc, mword_id)
match(label$id, get_column(tc, mword_id))
match(get_column(tc, mword_id), label_id)
match(get_column(tc, mword_id), labelTid)
match(get_column(tc, mword_id), label$id)
label$label[match(get_column(tc, mword_id), label$id)]
source('~/Dropbox/tcorpus/R/resources.r')
source('~/Dropbox/tcorpus/R/resources.r')
mtc = feature_from_resource(mtc, 'jrc_names', save_path = '~/Downloads')
source('~/Dropbox/tcorpus/R/resources.r')
source('~/Dropbox/tcorpus/R/resources.r')
tc
tc = mtc
new_feature
new_feature = 'jrc_names'
tc = add_multiword_label(tc, new_feature, feature=feature)
label = multiword_labels(tc, mword_id, feature=feature) ## for shattered_tCorpus, this has to be done for the entire corpus first, or labels will not match across shards
label
label = label[order(-label$N),]
label = label[!duplicated(label$id),]
label$label = as.factor(label$label)
label$label[match(get_column(tc, mword_id), label$id)]
tc = set_column(tc, new_feature, label$label)
label$label
source('~/Dropbox/tcorpus/R/resources.r')
tc = add_multiword_label(tc, new_feature, feature=feature)
get_data(tc)
tests = get_data(tc)
test = get_data(tc)
test[!is.na(test$jrc_names_l),]
multiword_labels(tc, 'jrc_names_i')
multiword_labels(tc, 'jrc_names_l')
source('~/Dropbox/tcorpus/R/resources.r')
testhelp()
library(tcorpus)
testhelp()
tc
tc = feature_from_resource(tc)
source('~/Dropbox/tcorpus/R/resources.r')
tc = feature_from_resource(tc)
source('~/Dropbox/tcorpus/R/resources.r')
source('~/Dropbox/tcorpus/R/resources.r')
tc = feature_from_resource(tc)
14*500000
source('~/Dropbox/tcorpus/R/resources.r')
re = download_jrc_names()
re
source('~/Dropbox/tcorpus/R/resources.r')
re = download_jrc_names()
re
split(re, 2)
candidates[[i]] = fast_multiword_lookup(, fi=fi, regex_sep=regex_sep, case_sensitive=case_sensitive)
split(re, 2)
split(re, get_batch_i(nrow(re), batchsize = 50000, return_vector = T))
x = c(1,1,1,2,2,2,3,3,3,4,4,5,6,7,7)
order(x)
x[order(x)]
order(x)
x[order(x)]
n.batches = ceiling(nrow(re) / batchsize)
batchsize=50000
batchsize=50000
n.batches = ceiling(nrow(re) / batchsize)
n.batches
batch_i = seq(1, n.batches, length.out = 100)
batch_i
batch_i = seq(1, n.batches, along.with = 100)
batch_i
?rep
batch_i = rep(1:n.batches, length.out=100)
batch_i
source('~/Dropbox/tcorpus/R/resources.r')
tc = feature_from_resource(tc)
source('~/Dropbox/tcorpus/R/resources.r')
tc = feature_from_resource(tc)
source('~/Dropbox/tcorpus/R/resources.r')
tc = feature_from_resource(tc)
source('~/Dropbox/tcorpus/R/resources.r')
tc = feature_from_resource(tc)
source('~/Dropbox/tcorpus/R/resources.r')
source('~/Dropbox/tcorpus/R/resources.r')
tc = feature_from_resource(tc)
source('~/Dropbox/tcorpus/R/resources.r')
tc = feature_from_resource(tc)
}
tc
source('~/Dropbox/tcorpus/R/resources.r')
source('~/Dropbox/tcorpus/R/resources.r')
source('~/Dropbox/tcorpus/R/resources.r')
source('~/Dropbox/tcorpus/R/resources.r')
microbenchmark::microbenchmark(tc = feature_from_resource(tc), times=3)
source('~/Dropbox/tcorpus/R/resources.r')
microbenchmark::microbenchmark(tc = feature_from_resource(tc), times=3)
source('~/Dropbox/tcorpus/R/resources.r')
microbenchmark::microbenchmark(tc = feature_from_resource(tc, verbose=F), times=3)
source('~/Dropbox/tcorpus/R/resources.r')
microbenchmark::microbenchmark(tc = feature_from_resource(tc, verbose=F), times=3)
source('~/Dropbox/tcorpus/R/resources.r')
source('~/Dropbox/tcorpus/R/resources.r')
source('~/Dropbox/tcorpus/R/resources.r')
library(tcorpus)
gc()
source('~/Dropbox/tcorpus/R/resources.r')
re = download_jrc_names()
nrow(re)
nrow(re)
length(unique(re$id))
library(tcorpus)
