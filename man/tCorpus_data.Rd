% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/documentation_overview.r
\name{tCorpus_data}
\alias{tCorpus_data}
\title{Methods for viewing, modifying and subsetting tCorpus data}
\description{
\link[=tCorpus]{(back to overview)}
}
\details{
\strong{Fields}
\tabular{ll}{
  $n \tab The number of tokens (i.e. rows in the data) \cr
  $n_meta \tab The number of documents (i.e. rows in the document meta data) \cr
  $names \tab The names of the token data columns \cr
  $names_meta \tab The names of the document meta data columns
}

\strong{Get data}
\tabular{ll}{
  \link[=tCorpus$data]{$data} \tab Get the token data (in \link{data.table} format). Can also be used to modify data using regular assignment, but with some restrictions (see Modify data section) \cr
  \link[=tCorpus$meta]{$meta} \tab Get the document meta data \cr
  \link[=tCorpus$get]{$get} \tab Get specific columns (faster and more efficient than $data, which first copies the whole data.table)  \cr
  \link[=tCorpus$get]{$get_meta} \tab Get specific meta data columns  \cr
  \link[=tCorpus$dtm]{$dtm()} \tab Create a document term matrix \cr
  \link[=tCorpus$feature_index]{$feature_index()} \tab Create or load a feature index. Used for fast lookup of features. \cr
  \link[=tCorpus$context]{$context()} \tab Get a context vector. Currently supports documents or globally unique sentences.
}

\strong{Modify}

There are several ways to modify the data and meta data in tCorpus.
The fastest and most memory efficient way is to use the set and set_meta methods, which support modify by reference (this is not the default, see documentation for \link[=tCorpus_reference_mode]{Reference mode}).
A less efficient but more convenient approach is to directly assign to the $data and $meta, which can be used as a regular data.table (though note that assignment by reference is not possible)

Modifying is restricted in certain ways to ensure that the data always meets the assumptions required for tCorpus methods.
tCorpus automatically tests whether assumptions are violated, so you don't have to think about this yourself.
The most important limitations are that you cannot subset or append the data this way, and you cannot change the document ids.
For this, you can use the appropriate methods (subset, merge_tcorpus, doc_id_levels).

\tabular{ll}{
  \link[=tCorpus$set]{$set()} \tab Modify the token data by setting the values of one (existing or new) column. \cr
  \link[=tCorpus$set]{$set_meta()} \tab The set method for the document meta data \cr
  \link[=tCorpus$subset]{$subset()} \tab Modify the token and/or meta data using the \link{subset.tCorpus} function. A subset expression can be specified for both the token data (subset) and the document meta data (subset_meta). \cr
  \link[=tCorpus$subset_query]{$subset_query()} \tab to be added
}

\strong{Check and clean}
\tabular{ll}{
  \link[=tCorpus$feature_index]{$reset_feature_index()} \tab Reset the feature index. (free up memory) \cr
  $set_keys() \tab Check and (re)set the data.table keys. Should not be necessary, but pointed out here till certain. \cr
  $droplevels() \tab Drop the unused factor levels in the token and meta data.
}
}

