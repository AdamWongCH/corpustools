% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/documentation_methods.r
\name{tCorpus$semnet_window}
\alias{semnet_window.tCorpus}
\alias{tCorpus$semnet_window}
\title{Create a semantic network based on the co-occurence of words in word windows}
\usage{
## R6 method for class tCorpus
}
\arguments{
\item{feature}{The name of the feature column}

\item{measure}{The similarity measure. Currently supports: "con_prob" (conditional probability), "cosine" similarity, "count_directed" (i.e number of cooccurrences) and "count_undirected" (same as count_directed, but returned as an undirected network, chi2 (chi-square score))}

\item{context_level}{Determine whether features need to co-occurr within "documents" or "sentences"}

\item{window.size}{The word distance within which features are considered to co-occurr}

\item{direction}{Determine whether co-occurrence is assymmetricsl ("<>") or takes the order of words into account. If direction is '<', then the from/x feature needs to occur before the to/y feature. If direction is '>', then after.}

\item{backbone}{If True, add an edge attribute for the backbone alpha}

\item{n.batches}{If a number, perform the calculation in batches}

\item{set_matrix_mode}{Advanced feature. There are two approaches for calculating window co-occurrence. One is to measure how often a feature occurs within a given word window, which can be calculating by calculating the inner product of a matrix that contains the exact position of features and a matrix that contains the occurrence window. We refer to this as the "positionXwindow" mode. Alternatively, we can measure how much the windows of features overlap, for which take the inner product of two window matrices. By default, semnet_window takes the mode that we deem most appropriate for the similarity measure. Substantially, the positionXwindow approach has the advantage of being very easy to interpret (e.g. how likely is feature "Y" to occurr within 10 words from feature "X"?). The windowXwindow mode, on the other hand, has the interesting feature that similarity is stronger if words co-occurr more closely together (since then their windows overlap more). Currently, we only use the windowXwindow mode for cosine similarity. By using the set_matrix_mode parameter you can override this.}
}
\description{
This function calculates the co-occurence of features and returns a network/graph in the \link{igraph} format where nodes are words and edges represent the similarity/adjacency of words. Co-occurence is calcuated based on how often two words co-occurr within a given word distance.
}

