% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/documentation_methods.r
\name{tCorpus$within}
\alias{tCorpus$within}
\alias{tCorpus$within_meta}
\alias{within.tCorpus}
\alias{within_meta.tCorpus}
\title{Modify the token and meta data.tables of a tCorpus}
\usage{
## R6 method for class tCorpus
\code{tCorpus$within(expr, copy=self$copy_on_modify, safe=T)}
\code{tCorpus$within_meta(expr, copy=self$copy_on_modify, safe=T)}
}
\arguments{
\item{expr}{expression to be evaluated within the data.table.}

\item{copy}{If TRUE, the method returns a new tCorpus object. This is the normal R way of doing things. Alternatively, the tCorpus can be used as a reference class object by setting copy to FALSE, or setting tCorpus$copy_on_modify to FALSE to use this globally. Please consult the general documentation for tCorpus (?tCorpus) for a more detailed explanation.}

\item{safe}{If TRUE, you are unable to modify the position columns (doc_id, sent_i, word_i), which is very likely to break the tCorpus. Only set to FALSE if you know exactly what you're doing.}
}
\description{
Modify the token/meta data.table using the \link{within.data.table} function. The main argument (expr) is one or multiple lines of R code between accolades, in which the columns of the token data can be modified as regular vector objects. For example: expr = {word_low = tolower(word)}. The main advantage of within_data compared to transform_data is that it enables modifying subsets of columns (for example: expr = {pos[pos == 'noun'] = 'N'}
}

